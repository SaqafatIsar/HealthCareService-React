{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Documents\\\\Desktop\\\\HealthAppReact\\\\healthcare-services\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n\n// const App = () => {\n//     const [services, setServices] = useState([]);\n//     const [newService, setNewService] = useState({ name: '', description: '', price: '' });\n//     const [editService, setEditService] = useState(null);\n\n//     useEffect(() => {\n//         // Initialize with some data or fetch from an API\n//         setServices([\n//             { id: 1, name: 'General Checkup', description: 'A general health checkup', price: 50 },\n//             { id: 2, name: 'Blood Test', description: 'Basic blood test', price: 30 },\n//         ]);\n//     }, []);\n\n//     const handleInputChange = (e) => {\n//         const { name, value } = e.target;\n//         setNewService({ ...newService, [name]: value });\n//     };\n\n//     const handleAddService = () => {\n//         if (newService.name && newService.description && newService.price) {\n//             setServices([...services, { ...newService, id: Date.now() }]);\n//             setNewService({ name: '', description: '', price: '' });\n//         }\n//     };\n\n//     const handleUpdateService = (id) => {\n//         const updatedServices = services.map((service) => \n//             service.id === id ? editService : service\n//         );\n//         setServices(updatedServices);\n//         setEditService(null);\n//     };\n\n//     const handleDeleteService = (id) => {\n//         const updatedServices = services.filter((service) => service.id !== id);\n//         setServices(updatedServices);\n//     };\n\n//     return (\n//         <div className=\"App\">\n//             <h1>Healthcare Services</h1>\n//             <div>\n//                 <input\n//                     type=\"text\"\n//                     name=\"name\"\n//                     placeholder=\"Name\"\n//                     value={newService.name}\n//                     onChange={handleInputChange}\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     name=\"description\"\n//                     placeholder=\"Description\"\n//                     value={newService.description}\n//                     onChange={handleInputChange}\n//                 />\n//                 <input\n//                     type=\"number\"\n//                     name=\"price\"\n//                     placeholder=\"Price\"\n//                     value={newService.price}\n//                     onChange={handleInputChange}\n//                 />\n//                 <button onClick={handleAddService}>Add Service</button>\n//             </div>\n//             <ul>\n//                 {services.map((service) => (\n//                     <li key={service.id}>\n//                         {editService && editService.id === service.id ? (\n//                             <div>\n//                                 <input\n//                                     type=\"text\"\n//                                     name=\"name\"\n//                                     value={editService.name}\n//                                     onChange={(e) => setEditService({ ...editService, name: e.target.value })}\n//                                 />\n//                                 <input\n//                                     type=\"text\"\n//                                     name=\"description\"\n//                                     value={editService.description}\n//                                     onChange={(e) => setEditService({ ...editService, description: e.target.value })}\n//                                 />\n//                                 <input\n//                                     type=\"number\"\n//                                     name=\"price\"\n//                                     value={editService.price}\n//                                     onChange={(e) => setEditService({ ...editService, price: e.target.value })}\n//                                 />\n//                                 <button onClick={() => handleUpdateService(service.id)}>Save</button>\n//                             </div>\n//                         ) : (\n//                             <div>\n//                                 <span>{service.name}</span>\n//                                 <span>{service.description}</span>\n//                                 <span>{service.price}</span>\n//                                 <button onClick={() => setEditService(service)}>Edit</button>\n//                                 <button onClick={() => handleDeleteService(service.id)}>Delete</button>\n//                             </div>\n//                         )}\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default App;\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ServiceList from './ServiceList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [services, setServices] = useState([]);\n  const [newService, setNewService] = useState({\n    name: '',\n    description: '',\n    price: ''\n  });\n  const [editService, setEditService] = useState(null);\n  useEffect(() => {\n    // Initialize with some data or fetch from an API\n    setServices([{\n      id: 1,\n      name: 'General Checkup',\n      description: 'A general health checkup',\n      price: 50\n    }, {\n      id: 2,\n      name: 'Blood Test',\n      description: 'Basic blood test',\n      price: 30\n    }]);\n  }, []);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (editService) {\n      setEditService({\n        ...editService,\n        [name]: value\n      });\n    } else {\n      setNewService({\n        ...newService,\n        [name]: value\n      });\n    }\n  };\n  const handleAddService = () => {\n    if (newService.name && newService.description && newService.price) {\n      setServices([...services, {\n        ...newService,\n        id: Date.now()\n      }]);\n      setNewService({\n        name: '',\n        description: '',\n        price: ''\n      });\n    }\n  };\n  const handleUpdateService = id => {\n    const updatedServices = services.map(service => service.id === id ? editService : service);\n    setServices(updatedServices);\n    setEditService(null);\n  };\n  const handleDeleteService = id => {\n    const updatedServices = services.filter(service => service.id !== id);\n    setServices(updatedServices);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Healthcare Services\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Name\",\n        value: editService ? editService.name : newService.name,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        placeholder: \"Description\",\n        value: editService ? editService.description : newService.description,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"price\",\n        placeholder: \"Price\",\n        value: editService ? editService.price : newService.price,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: editService ? () => handleUpdateService(editService.id) : handleAddService,\n        children: editService ? \"Update Service\" : \"Add Service\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ServiceList, {\n      services: services,\n      onEdit: setEditService,\n      onDelete: handleDeleteService\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"h5ZcczO30gKNm3acLLUtn7JRdf4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ServiceList","jsxDEV","_jsxDEV","App","_s","services","setServices","newService","setNewService","name","description","price","editService","setEditService","id","handleInputChange","e","value","target","handleAddService","Date","now","handleUpdateService","updatedServices","map","service","handleDeleteService","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","onEdit","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Documents/Desktop/HealthAppReact/healthcare-services/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import './App.css';\n\n// const App = () => {\n//     const [services, setServices] = useState([]);\n//     const [newService, setNewService] = useState({ name: '', description: '', price: '' });\n//     const [editService, setEditService] = useState(null);\n\n//     useEffect(() => {\n//         // Initialize with some data or fetch from an API\n//         setServices([\n//             { id: 1, name: 'General Checkup', description: 'A general health checkup', price: 50 },\n//             { id: 2, name: 'Blood Test', description: 'Basic blood test', price: 30 },\n//         ]);\n//     }, []);\n\n//     const handleInputChange = (e) => {\n//         const { name, value } = e.target;\n//         setNewService({ ...newService, [name]: value });\n//     };\n\n//     const handleAddService = () => {\n//         if (newService.name && newService.description && newService.price) {\n//             setServices([...services, { ...newService, id: Date.now() }]);\n//             setNewService({ name: '', description: '', price: '' });\n//         }\n//     };\n\n//     const handleUpdateService = (id) => {\n//         const updatedServices = services.map((service) => \n//             service.id === id ? editService : service\n//         );\n//         setServices(updatedServices);\n//         setEditService(null);\n//     };\n\n//     const handleDeleteService = (id) => {\n//         const updatedServices = services.filter((service) => service.id !== id);\n//         setServices(updatedServices);\n//     };\n\n//     return (\n//         <div className=\"App\">\n//             <h1>Healthcare Services</h1>\n//             <div>\n//                 <input\n//                     type=\"text\"\n//                     name=\"name\"\n//                     placeholder=\"Name\"\n//                     value={newService.name}\n//                     onChange={handleInputChange}\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     name=\"description\"\n//                     placeholder=\"Description\"\n//                     value={newService.description}\n//                     onChange={handleInputChange}\n//                 />\n//                 <input\n//                     type=\"number\"\n//                     name=\"price\"\n//                     placeholder=\"Price\"\n//                     value={newService.price}\n//                     onChange={handleInputChange}\n//                 />\n//                 <button onClick={handleAddService}>Add Service</button>\n//             </div>\n//             <ul>\n//                 {services.map((service) => (\n//                     <li key={service.id}>\n//                         {editService && editService.id === service.id ? (\n//                             <div>\n//                                 <input\n//                                     type=\"text\"\n//                                     name=\"name\"\n//                                     value={editService.name}\n//                                     onChange={(e) => setEditService({ ...editService, name: e.target.value })}\n//                                 />\n//                                 <input\n//                                     type=\"text\"\n//                                     name=\"description\"\n//                                     value={editService.description}\n//                                     onChange={(e) => setEditService({ ...editService, description: e.target.value })}\n//                                 />\n//                                 <input\n//                                     type=\"number\"\n//                                     name=\"price\"\n//                                     value={editService.price}\n//                                     onChange={(e) => setEditService({ ...editService, price: e.target.value })}\n//                                 />\n//                                 <button onClick={() => handleUpdateService(service.id)}>Save</button>\n//                             </div>\n//                         ) : (\n//                             <div>\n//                                 <span>{service.name}</span>\n//                                 <span>{service.description}</span>\n//                                 <span>{service.price}</span>\n//                                 <button onClick={() => setEditService(service)}>Edit</button>\n//                                 <button onClick={() => handleDeleteService(service.id)}>Delete</button>\n//                             </div>\n//                         )}\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default App;\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ServiceList from './ServiceList';\n\nconst App = () => {\n    const [services, setServices] = useState([]);\n    const [newService, setNewService] = useState({ name: '', description: '', price: '' });\n    const [editService, setEditService] = useState(null);\n\n    useEffect(() => {\n        // Initialize with some data or fetch from an API\n        setServices([\n            { id: 1, name: 'General Checkup', description: 'A general health checkup', price: 50 },\n            { id: 2, name: 'Blood Test', description: 'Basic blood test', price: 30 },\n        ]);\n    }, []);\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        if (editService) {\n            setEditService({ ...editService, [name]: value });\n        } else {\n            setNewService({ ...newService, [name]: value });\n        }\n    };\n\n    const handleAddService = () => {\n        if (newService.name && newService.description && newService.price) {\n            setServices([...services, { ...newService, id: Date.now() }]);\n            setNewService({ name: '', description: '', price: '' });\n        }\n    };\n\n    const handleUpdateService = (id) => {\n        const updatedServices = services.map((service) =>\n            service.id === id ? editService : service\n        );\n        setServices(updatedServices);\n        setEditService(null);\n    };\n\n    const handleDeleteService = (id) => {\n        const updatedServices = services.filter((service) => service.id !== id);\n        setServices(updatedServices);\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Healthcare Services</h1>\n            <div>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Name\"\n                    value={editService ? editService.name : newService.name}\n                    onChange={handleInputChange}\n                />\n                <input\n                    type=\"text\"\n                    name=\"description\"\n                    placeholder=\"Description\"\n                    value={editService ? editService.description : newService.description}\n                    onChange={handleInputChange}\n                />\n                <input\n                    type=\"number\"\n                    name=\"price\"\n                    placeholder=\"Price\"\n                    value={editService ? editService.price : newService.price}\n                    onChange={handleInputChange}\n                />\n                <button onClick={editService ? () => handleUpdateService(editService.id) : handleAddService}>\n                    {editService ? \"Update Service\" : \"Add Service\"}\n                </button>\n            </div>\n            <ServiceList\n                services={services}\n                onEdit={setEditService}\n                onDelete={handleDeleteService}\n            />\n        </div>\n    );\n};\n\nexport default App;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}